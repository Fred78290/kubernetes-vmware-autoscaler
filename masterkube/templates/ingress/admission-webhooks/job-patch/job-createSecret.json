{
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": {
        "name": "ingress-nginx-admission-create",
        "annotations": {
            "helm.sh/hook": "pre-install,pre-upgrade",
            "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
        },
        "labels": {
            "helm.sh/chart": "ingress-nginx-2.13.0",
            "app.kubernetes.io/name": "ingress-nginx",
            "app.kubernetes.io/instance": "ingress-nginx",
            "app.kubernetes.io/version": "0.35.0",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/component": "admission-webhook"
        },
        "namespace": "$K8NAMESPACE"
    },
    "spec": {
        "template": {
            "metadata": {
                "name": "ingress-nginx-admission-create",
                "labels": {
                    "helm.sh/chart": "ingress-nginx-2.13.0",
                    "app.kubernetes.io/name": "ingress-nginx",
                    "app.kubernetes.io/instance": "ingress-nginx",
                    "app.kubernetes.io/version": "0.35.0",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/component": "admission-webhook"
                }
            },
            "spec": {
                "containers": [
                    {
                        "name": "create",
                        "image": "jettech/kube-webhook-certgen:v1.2.0",
                        "imagePullPolicy": "IfNotPresent",
                        "args": [
                            "create",
                            "--host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$K8NAMESPACE.svc",
                            "--namespace=$K8NAMESPACE",
                            "--secret-name=ingress-nginx-admission"
                        ]
                    }
                ],
                "restartPolicy": "OnFailure",
                "serviceAccountName": "ingress-nginx-admission",
                "securityContext": {
                    "runAsNonRoot": true,
                    "runAsUser": 2000
                }
            }
        }
    }
}